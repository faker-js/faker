name: Publish Release

on:
  release:
    types: [published]

permissions: {} # we use a personal access token to push the release branch

jobs:
  publish:
    name: Publish Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0 # we want to push the release branch later
          token: ${{ secrets.GH_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set node version to 22
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install deps
        run: pnpm install --frozen-lockfile
        env:
          CYPRESS_INSTALL_BINARY: 0

      - name: Gather release information
        run: |
          RELEASE_VERSION=$(jq -r '.version' package.json)
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          RELEASE_MAJOR=$(jq -r '.version | split(".")[0]' package.json)
          echo "RELEASE_MAJOR=$RELEASE_MAJOR" >> $GITHUB_ENV
          DIST_TAG=$(jq -r '.version | if split("-")[1] == null then "latest" else "next" end' package.json)
          echo "DIST_TAG=$DIST_TAG" >> $GITHUB_ENV

      - name: Prepare README
        run: |
          echo -e "$(grep -P '## ðŸ“™ API Documentation' -B 10000 README.md)\n\n- [Getting Started Guide](https://fakerjs.dev/guide/)\n- [API Reference](https://fakerjs.dev/api/)\n\n$(grep -P '## ðŸš€ Features' -A 10000 README.md)" > README.md
          sed -i "s|/fakerjs.dev/|/v$RELEASE_MAJOR.fakerjs.dev/|g" README.md

      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NPM_AUTH_TOKEN}"
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Publish
        run: |
          pnpm publish --tag next --no-git-checks
        env:
          CYPRESS_INSTALL_BINARY: 0

      - name: Set latest/next dist-tag
        run: |
          pnpm dist-tag add @faker-js/faker@$RELEASE_VERSION $DIST_TAG

      - name: Push to Release Branch
        run: |
          git push origin $GITHUB_REF_NAME:v$RELEASE_MAJOR

      - name: Notify closed PRs
        run: |
          VERSION_LINES=$(grep -n '^## ' CHANGELOG.md | head -n 2 | cut -d: -f1)
          LATEST_VERSION_LINE=$(echo "$VERSION_LINES" | head -n 1)
          PREVIOUS_VERSION_LINE=$(echo "$VERSION_LINES" | tail -n 1)
          CHANGELOG_SECTION=$(sed -n "${LATEST_VERSION_LINE},$(($PREVIOUS_VERSION_LINE - 1))p" CHANGELOG.md)
          PR_REFERENCES=$(echo "$CHANGELOG_SECTION" | grep -oP '\[#\d+\]' | grep -oP '\d+' | sort -u)
          echo "$PR_REFERENCES" | while read -r pr_number; do
            gh pr comment $pr_number -b "This change has been released in v$RELEASE_VERSION ðŸŽ‰"
          done
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
