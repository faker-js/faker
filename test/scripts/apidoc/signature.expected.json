{
  "noParamMethod": {
    "name": "noParamMethod",
    "title": "No Param Method",
    "description": "<p>Test with no parameters.</p>\n",
    "parameters": [],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">noParamMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  },
  "defaultBooleanParamMethod": {
    "name": "defaultBooleanParamMethod",
    "title": "Default Boolean Param Method",
    "description": "<p>Test with a default parameter.</p>\n",
    "parameters": [
      {
        "name": "c",
        "type": "boolean",
        "default": "true",
        "description": "<p>The boolean parameter.</p>\n"
      }
    ],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">defaultBooleanParamMethod</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  },
  "functionParamMethod": {
    "name": "functionParamMethod",
    "title": "Function Param Method",
    "description": "<p>Test with a function parameters.</p>\n",
    "parameters": [
      {
        "name": "fn",
        "type": "(a: string) => number",
        "description": "<p>The function parameter.</p>\n"
      }
    ],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">functionParamMethod</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  },
  "methodWithDeprecated": {
    "name": "methodWithDeprecated",
    "title": "Method With Deprecated",
    "description": "<p>Test with deprecated and see marker.</p>\n",
    "parameters": [],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">methodWithDeprecated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": true,
    "seeAlsos": ["test.apidoc.methodWithExample()"]
  },
  "methodWithExample": {
    "name": "methodWithExample",
    "title": "Method With Example",
    "description": "<p>Test with example marker.</p>\n",
    "parameters": [],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">methodWithExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\ntest<span class=\"token punctuation\">.</span>apidoc<span class=\"token punctuation\">.</span><span class=\"token function\">methodWithExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  },
  "multiParamMethod": {
    "name": "multiParamMethod",
    "title": "Multi Param Method",
    "description": "<p>Test with multiple parameters.</p>\n",
    "parameters": [
      {
        "name": "a",
        "type": "number",
        "description": "<p>The number parameter.</p>\n"
      },
      {
        "name": "b?",
        "type": "string",
        "description": "<p>The string parameter.</p>\n"
      },
      {
        "name": "c",
        "type": "boolean",
        "default": "true",
        "description": "<p>The boolean parameter.</p>\n"
      }
    ],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">multiParamMethod</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  },
  "optionsInlineParamMethodWithDefaults": {
    "name": "optionsInlineParamMethodWithDefaults",
    "title": "Options Inline Param Method With Defaults",
    "description": "<p>Test with a function parameters (inline types) with defaults.</p>\n",
    "parameters": [
      {
        "name": "a",
        "type": "{ ... }",
        "default": "{ value: 1 }",
        "description": "<p>Parameter with signature default.</p>\n"
      },
      {
        "name": "a.value?",
        "type": "number",
        "description": "<p>The number parameter.</p>\n"
      },
      {
        "name": "b",
        "type": "{ ... }",
        "default": "{ value: 1 }",
        "description": "<p>Parameter with jsdocs default.</p>\n"
      },
      {
        "name": "b.value?",
        "type": "number",
        "description": "<p>The boolean parameter.</p>\n"
      },
      {
        "name": "c",
        "type": "{ ... }",
        "description": "<p>Parameter with inner jsdocs default.</p>\n"
      },
      {
        "name": "c.value?",
        "type": "number",
        "default": "2",
        "description": "<p>The boolean parameter.</p>\n"
      }
    ],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">optionsInlineParamMethodWithDefaults</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  },
  "optionsInterfaceParamMethodWithDefaults": {
    "name": "optionsInterfaceParamMethodWithDefaults",
    "title": "Options Interface Param Method With Defaults",
    "description": "<p>Test with a function parameters with defaults.</p>\n",
    "parameters": [
      {
        "name": "a",
        "type": "ParameterOptionsInterfaceA",
        "default": "{ value: 1 }",
        "description": "<p>Parameter with signature default.</p>\n"
      },
      {
        "name": "b",
        "type": "ParameterOptionsInterfaceB",
        "default": "{ value: 1 }",
        "description": "<p>Parameter with jsdocs default.</p>\n"
      },
      {
        "name": "c",
        "type": "ParameterOptionsInterfaceC",
        "description": "<p>Parameter with inner jsdocs default.</p>\n"
      }
    ],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">optionsInterfaceParamMethodWithDefaults</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> ParameterOptionsInterfaceA <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> ParameterOptionsInterfaceB <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> ParameterOptionsInterfaceC<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  },
  "optionsTypeParamMethodWithDefaults": {
    "name": "optionsTypeParamMethodWithDefaults",
    "title": "Options Type Param Method With Defaults",
    "description": "<p>Test with a function parameters with defaults.</p>\n",
    "parameters": [
      {
        "name": "a",
        "type": "ParameterOptionsTypeA",
        "default": "{ value: 1 }",
        "description": "<p>Parameter with signature default.</p>\n"
      },
      {
        "name": "b",
        "type": "ParameterOptionsTypeB",
        "default": "{ value: 1 }",
        "description": "<p>Parameter with jsdocs default.</p>\n"
      },
      {
        "name": "c",
        "type": "ParameterOptionsTypeC",
        "description": "<p>Parameter with inner jsdocs default.</p>\n"
      }
    ],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">optionsTypeParamMethodWithDefaults</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> ParameterOptionsTypeA <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> ParameterOptionsTypeB <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> ParameterOptionsTypeC<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  },
  "optionalStringParamMethod": {
    "name": "optionalStringParamMethod",
    "title": "Optional String Param Method",
    "description": "<p>Test with an optional parameter.</p>\n",
    "parameters": [
      {
        "name": "b?",
        "type": "string",
        "description": "<p>The string parameter.</p>\n"
      }
    ],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">optionalStringParamMethod</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  },
  "optionsParamMethod": {
    "name": "optionsParamMethod",
    "title": "Options Param Method",
    "description": "<p>Test with a function parameters.</p>\n",
    "parameters": [
      {
        "name": "options",
        "type": "{ ... }",
        "description": "<p>The function parameter.</p>\n"
      },
      {
        "name": "options.a",
        "type": "number",
        "description": "<p>The number parameter.</p>\n"
      },
      {
        "name": "options.b?",
        "type": "string",
        "description": "<p>The string parameter.</p>\n"
      },
      {
        "name": "options.c",
        "type": "boolean",
        "description": "<p>The boolean parameter.</p>\n"
      },
      {
        "name": "options.d",
        "type": "() => string",
        "description": "<p>The method parameter.</p>\n"
      }
    ],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">optionsParamMethod</span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>\n  b<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n  c<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">d</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  },
  "requiredNumberParamMethod": {
    "name": "requiredNumberParamMethod",
    "title": "Required Number Param Method",
    "description": "<p>Test with a required parameter.</p>\n",
    "parameters": [
      {
        "name": "a",
        "type": "number",
        "description": "<p>The number parameter.</p>\n"
      }
    ],
    "returns": "number",
    "examples": "<div class=\"language-ts\"><pre v-pre><code>faker<span class=\"token punctuation\">.</span><span class=\"token function\">requiredNumberParamMethod</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n</code></pre>\n</div>",
    "deprecated": false,
    "seeAlsos": []
  }
}
