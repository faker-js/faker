// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`signature > analyzeSignature() > complexArrayParameter 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Complex array parameter.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">complexArrayParameter</span><span style=\\"color:#89DDFF\\">&lt;</span><span style=\\"color:#FFCB6B\\">T</span><span style=\\"color:#89DDFF\\">&gt;</span><span style=\\"color:#BABED8\\">(array: readonly </span><span style=\\"color:#82AAFF\\">Array</span><span style=\\"color:#89DDFF\\">&lt;{</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">value</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#FFCB6B\\">T</span><span style=\\"color:#89DDFF\\">,</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">weight</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#FFCB6B\\">number</span></span>
<span class=\\"line\\"><span style=\\"color:#89DDFF\\">}&gt;</span><span style=\\"color:#BABED8\\">): T</span></span></code></pre>
</div>",
  "name": "complexArrayParameter",
  "parameters": [
    {
      "description": "<p>The type of the entries to pick from.</p>
",
      "name": "<T>",
      "type": undefined,
    },
    {
      "default": undefined,
      "description": "<p>Array to pick the value from.</p>
",
      "name": "array",
      "type": "Array<{ ... }>",
    },
    {
      "default": undefined,
      "description": "<p>The value to pick.</p>
",
      "name": "array[].value",
      "type": "T",
    },
    {
      "default": undefined,
      "description": "<p>The weight of the value.</p>
",
      "name": "array[].weight",
      "type": "number",
    },
  ],
  "returns": "T",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L358",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > defaultBooleanParamMethod 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with a default parameter.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">defaultBooleanParamMethod</span><span style=\\"color:#BABED8\\">(c: boolean </span><span style=\\"color:#89DDFF\\">=</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#FF9CAC\\">true</span><span style=\\"color:#BABED8\\">): number</span></span></code></pre>
</div>",
  "name": "defaultBooleanParamMethod",
  "parameters": [
    {
      "default": "true",
      "description": "<p>The boolean parameter.</p>
",
      "name": "c",
      "type": "boolean",
    },
  ],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L105",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > expected and actual methods are equal 1`] = `
[
  "complexArrayParameter",
  "defaultBooleanParamMethod",
  "functionParamMethod",
  "literalUnionParamMethod",
  "methodWithDeprecated",
  "methodWithDeprecatedOption",
  "methodWithExample",
  "methodWithMultipleSeeMarkers",
  "methodWithMultipleSeeMarkersAndBackticks",
  "methodWithSinceMarker",
  "methodWithThrows",
  "multiParamMethod",
  "noParamMethod",
  "optionalStringParamMethod",
  "optionsInlineParamMethodWithDefaults",
  "optionsInterfaceParamMethodWithDefaults",
  "optionsParamMethod",
  "optionsTypeParamMethodWithDefaults",
  "requiredNumberParamMethod",
  "stringUnionParamMethod",
]
`;

exports[`signature > analyzeSignature() > functionParamMethod 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with a function parameters.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">functionParamMethod</span><span style=\\"color:#BABED8\\">(fn: </span><span style=\\"color:#89DDFF\\">(</span><span style=\\"color:#BABED8;font-style:italic\\">a</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#FFCB6B\\">string</span><span style=\\"color:#89DDFF\\">)</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#C792EA\\">=&gt;</span><span style=\\"color:#BABED8\\"> number): number</span></span></code></pre>
</div>",
  "name": "functionParamMethod",
  "parameters": [
    {
      "default": undefined,
      "description": "<p>The function parameter.</p>
",
      "name": "fn",
      "type": "(a: string) => number",
    },
  ],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L125",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > literalUnionParamMethod 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with LiteralUnion.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">literalUnionParamMethod</span><span style=\\"color:#BABED8\\">(value: </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">a</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">b</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> string</span><span style=\\"color:#89DDFF\\">,</span><span style=\\"color:#BABED8\\"> namedValue: </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">a</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">b</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> string</span><span style=\\"color:#89DDFF\\">,</span><span style=\\"color:#BABED8\\"> array: readonly Array</span><span style=\\"color:#89DDFF\\">&lt;</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">a</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">b</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> string</span><span style=\\"color:#89DDFF\\">&gt;,</span><span style=\\"color:#BABED8\\"> namedArray: readonly Array</span><span style=\\"color:#89DDFF\\">&lt;</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">a</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">b</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> string</span><span style=\\"color:#89DDFF\\">&gt;,</span><span style=\\"color:#BABED8\\"> mixed: </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">a</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">b</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> string </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> readonly Array</span><span style=\\"color:#89DDFF\\">&lt;</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">a</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">b</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> string</span><span style=\\"color:#89DDFF\\">&gt;,</span><span style=\\"color:#BABED8\\"> namedMixed: </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">a</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">b</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> string </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> readonly Array</span><span style=\\"color:#89DDFF\\">&lt;</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">a</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">b</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> string</span><span style=\\"color:#89DDFF\\">&gt;</span><span style=\\"color:#BABED8\\">): string</span></span></code></pre>
</div>",
  "name": "literalUnionParamMethod",
  "parameters": [
    {
      "default": undefined,
      "description": "<p><code>'a'</code> or <code>'b'</code>.</p>
",
      "name": "value",
      "type": "'a' | 'b' | string",
    },
    {
      "default": undefined,
      "description": "<p><code>'a'</code> or <code>'b'</code>.</p>
",
      "name": "namedValue",
      "type": "'a' | 'b' | string",
    },
    {
      "default": undefined,
      "description": "<p>Array of <code>'a'</code> or <code>'b'</code>.</p>
",
      "name": "array",
      "type": "Array<'a' | 'b' | string>",
    },
    {
      "default": undefined,
      "description": "<p>Array of <code>'a'</code> or <code>'b'</code>.</p>
",
      "name": "namedArray",
      "type": "Array<'a' | 'b' | string>",
    },
    {
      "default": undefined,
      "description": "<p>Value <code>'a'</code> or <code>'b'</code> or an array thereof.</p>
",
      "name": "mixed",
      "type": "'a' | 'b' | string | Array<'a' | 'b' | string>",
    },
    {
      "default": undefined,
      "description": "<p>Value <code>'a'</code> or <code>'b'</code> or an array thereof.</p>
",
      "name": "namedMixed",
      "type": "'a' | 'b' | string | Array<'a' | 'b' | string>",
    },
  ],
  "returns": "string",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L159",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > methodWithDeprecated 1`] = `
{
  "deprecated": "<p>do something else</p>
",
  "description": "<p>Test with deprecated and see marker.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">methodWithDeprecated</span><span style=\\"color:#BABED8\\">(): number</span></span></code></pre>
</div>",
  "name": "methodWithDeprecated",
  "parameters": [],
  "returns": "number",
  "seeAlsos": [
    "test.apidoc.methodWithExample()",
  ],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L278",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > methodWithDeprecatedOption 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with deprecated option.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">methodWithDeprecatedOption</span><span style=\\"color:#BABED8\\">(option: </span><span style=\\"color:#89DDFF\\">{</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">a</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> string</span><span style=\\"color:#89DDFF\\">,</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#82AAFF\\">b</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">()</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#C792EA\\">=&gt;</span><span style=\\"color:#BABED8\\"> number</span><span style=\\"color:#89DDFF\\">,</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">c</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> number</span></span>
<span class=\\"line\\"><span style=\\"color:#89DDFF\\">}</span><span style=\\"color:#BABED8\\">): number</span></span></code></pre>
</div>",
  "name": "methodWithDeprecatedOption",
  "parameters": [
    {
      "default": undefined,
      "description": "<p>The options.</p>
",
      "name": "option",
      "type": "{ ... }",
    },
    {
      "default": undefined,
      "description": "<p>Some deprecated option.</p>
<p><strong>DEPRECATED:</strong> do something else.</p>
",
      "name": "option.a",
      "type": "string",
    },
    {
      "default": undefined,
      "description": "<p>Some other deprecated option.</p>
<p><strong>DEPRECATED:</strong> do something else.</p>
",
      "name": "option.b",
      "type": "() => number",
    },
    {
      "default": undefined,
      "description": "<p>Some other option.</p>
",
      "name": "option.c",
      "type": "number",
    },
  ],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L299",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > methodWithExample 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with example marker.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">methodWithExample</span><span style=\\"color:#BABED8\\">(): number</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">test</span><span style=\\"color:#89DDFF\\">.</span><span style=\\"color:#BABED8\\">apidoc</span><span style=\\"color:#89DDFF\\">.</span><span style=\\"color:#82AAFF\\">methodWithExample</span><span style=\\"color:#BABED8\\">() </span><span style=\\"color:#676E95;font-style:italic\\">// 0</span></span></code></pre>
</div>",
  "name": "methodWithExample",
  "parameters": [],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L267",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > methodWithMultipleSeeMarkers 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with multiple see markers.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">methodWithMultipleSeeMarkers</span><span style=\\"color:#BABED8\\">(): number</span></span></code></pre>
</div>",
  "name": "methodWithMultipleSeeMarkers",
  "parameters": [],
  "returns": "number",
  "seeAlsos": [
    "test.apidoc.methodWithExample()",
    "test.apidoc.methodWithDeprecated()",
  ],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L326",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > methodWithMultipleSeeMarkersAndBackticks 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with multiple see markers and backticks.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">methodWithMultipleSeeMarkersAndBackticks</span><span style=\\"color:#BABED8\\">(): number</span></span></code></pre>
</div>",
  "name": "methodWithMultipleSeeMarkersAndBackticks",
  "parameters": [],
  "returns": "number",
  "seeAlsos": [
    "test.apidoc.methodWithExample() with parameter <code>foo</code>.",
    "test.apidoc.methodWithDeprecated() with parameter <code>bar</code> and <code>baz</code>.",
  ],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L336",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > methodWithSinceMarker 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with since marker.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">methodWithSinceMarker</span><span style=\\"color:#BABED8\\">(): number</span></span></code></pre>
</div>",
  "name": "methodWithSinceMarker",
  "parameters": [],
  "returns": "number",
  "seeAlsos": [],
  "since": "1.0.0",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L345",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > methodWithThrows 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with throws</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">methodWithThrows</span><span style=\\"color:#BABED8\\">(): number</span></span></code></pre>
</div>",
  "name": "methodWithThrows",
  "parameters": [],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L287",
  "throws": "a Faker error",
}
`;

exports[`signature > analyzeSignature() > multiParamMethod 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with multiple parameters.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">multiParamMethod</span><span style=\\"color:#BABED8\\">(a: number</span><span style=\\"color:#89DDFF\\">,</span><span style=\\"color:#BABED8\\"> b</span><span style=\\"color:#89DDFF\\">?:</span><span style=\\"color:#BABED8\\"> string</span><span style=\\"color:#89DDFF\\">,</span><span style=\\"color:#BABED8\\"> c: boolean </span><span style=\\"color:#89DDFF\\">=</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#FF9CAC\\">true</span><span style=\\"color:#BABED8\\">): number</span></span></code></pre>
</div>",
  "name": "multiParamMethod",
  "parameters": [
    {
      "default": undefined,
      "description": "<p>The number parameter.</p>
",
      "name": "a",
      "type": "number",
    },
    {
      "default": undefined,
      "description": "<p>The string parameter.</p>
",
      "name": "b?",
      "type": "string",
    },
    {
      "default": "true",
      "description": "<p>The boolean parameter.</p>
",
      "name": "c",
      "type": "boolean",
    },
  ],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L116",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > noParamMethod 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with no parameters.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">noParamMethod</span><span style=\\"color:#BABED8\\">(): number</span></span></code></pre>
</div>",
  "name": "noParamMethod",
  "parameters": [],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L78",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > optionalStringParamMethod 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with an optional parameter.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">optionalStringParamMethod</span><span style=\\"color:#BABED8\\">(b</span><span style=\\"color:#89DDFF\\">?:</span><span style=\\"color:#BABED8\\"> string): number</span></span></code></pre>
</div>",
  "name": "optionalStringParamMethod",
  "parameters": [
    {
      "default": undefined,
      "description": "<p>The string parameter.</p>
",
      "name": "b?",
      "type": "string",
    },
  ],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L96",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > optionsInlineParamMethodWithDefaults 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with a function parameters (inline types) with defaults.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">optionsInlineParamMethodWithDefaults</span><span style=\\"color:#BABED8\\">(a: </span><span style=\\"color:#89DDFF\\">{</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">value</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> number</span></span>
<span class=\\"line\\"><span style=\\"color:#89DDFF\\">}</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">=</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">{</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F07178\\">value</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F78C6C\\">1</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">},</span><span style=\\"color:#BABED8\\"> b: </span><span style=\\"color:#89DDFF\\">{</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">value</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> number</span></span>
<span class=\\"line\\"><span style=\\"color:#89DDFF\\">}</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">=</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">{</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F07178\\">value</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F78C6C\\">1</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">},</span><span style=\\"color:#BABED8\\"> c: </span><span style=\\"color:#89DDFF\\">{</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">value</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> number</span></span>
<span class=\\"line\\"><span style=\\"color:#89DDFF\\">}</span><span style=\\"color:#BABED8\\">): number</span></span></code></pre>
</div>",
  "name": "optionsInlineParamMethodWithDefaults",
  "parameters": [
    {
      "default": "{ value: 1 }",
      "description": "<p>Parameter with signature default.
It also has a more complex description.</p>
",
      "name": "a",
      "type": "{ ... }",
    },
    {
      "default": undefined,
      "description": "<p>The number parameter.</p>
",
      "name": "a.value?",
      "type": "number",
    },
    {
      "default": "{ value: 1 }",
      "description": "<p>Parameter with jsdocs default.</p>
<p>It also has a more complex description.</p>
",
      "name": "b",
      "type": "{ ... }",
    },
    {
      "default": undefined,
      "description": "<p>The number parameter.</p>
",
      "name": "b.value?",
      "type": "number",
    },
    {
      "default": undefined,
      "description": "<p>Parameter with inner jsdocs default.</p>
",
      "name": "c",
      "type": "{ ... }",
    },
    {
      "default": "2",
      "description": "<p>The number parameter. It also has a more complex description.</p>
",
      "name": "c.value?",
      "type": "number",
    },
  ],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L217",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > optionsInterfaceParamMethodWithDefaults 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with a function parameters with defaults.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">optionsInterfaceParamMethodWithDefaults</span><span style=\\"color:#BABED8\\">(a: ParameterOptionsInterfaceA </span><span style=\\"color:#89DDFF\\">=</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">{</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F07178\\">value</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F78C6C\\">1</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">},</span><span style=\\"color:#BABED8\\"> b: ParameterOptionsInterfaceB </span><span style=\\"color:#89DDFF\\">=</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">{</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F07178\\">value</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F78C6C\\">1</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">},</span><span style=\\"color:#BABED8\\"> c: ParameterOptionsInterfaceC): number</span></span></code></pre>
</div>",
  "name": "optionsInterfaceParamMethodWithDefaults",
  "parameters": [
    {
      "default": "{ value: 1 }",
      "description": "<p>Parameter with signature default.</p>
",
      "name": "a",
      "type": "ParameterOptionsInterfaceA",
    },
    {
      "default": "{ value: 1 }",
      "description": "<p>Parameter with jsdocs default.</p>
",
      "name": "b",
      "type": "ParameterOptionsInterfaceB",
    },
    {
      "default": undefined,
      "description": "<p>Parameter with inner jsdocs default.</p>
",
      "name": "c",
      "type": "ParameterOptionsInterfaceC",
    },
  ],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L253",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > optionsParamMethod 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with a function parameters.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">optionsParamMethod</span><span style=\\"color:#BABED8\\">(options: </span><span style=\\"color:#89DDFF\\">{</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">a</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> number</span><span style=\\"color:#89DDFF\\">,</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">b</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> string</span><span style=\\"color:#89DDFF\\">,</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">c</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> boolean</span><span style=\\"color:#89DDFF\\">,</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#82AAFF\\">d</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">()</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#C792EA\\">=&gt;</span><span style=\\"color:#BABED8\\"> string</span><span style=\\"color:#89DDFF\\">,</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">e</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">a</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">b</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> string</span></span>
<span class=\\"line\\"><span style=\\"color:#89DDFF\\">}</span><span style=\\"color:#BABED8\\">): number</span></span></code></pre>
</div>",
  "name": "optionsParamMethod",
  "parameters": [
    {
      "default": undefined,
      "description": "<p>The function parameter.</p>
",
      "name": "options",
      "type": "{ ... }",
    },
    {
      "default": undefined,
      "description": "<p>The number parameter.</p>
",
      "name": "options.a",
      "type": "number",
    },
    {
      "default": undefined,
      "description": "<p>The string parameter.</p>
",
      "name": "options.b?",
      "type": "string",
    },
    {
      "default": undefined,
      "description": "<p>The boolean parameter.</p>
",
      "name": "options.c",
      "type": "boolean",
    },
    {
      "default": undefined,
      "description": "<p>The method parameter.</p>
",
      "name": "options.d",
      "type": "() => string",
    },
    {
      "default": "'a'",
      "description": "<p>A parameter with inline documentation.</p>
",
      "name": "options.e",
      "type": "'a' | 'b' | string",
    },
  ],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L187",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > optionsTypeParamMethodWithDefaults 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with a function parameters with defaults.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">optionsTypeParamMethodWithDefaults</span><span style=\\"color:#BABED8\\">(a: ParameterOptionsTypeA </span><span style=\\"color:#89DDFF\\">=</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">{</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F07178\\">value</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F78C6C\\">1</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">},</span><span style=\\"color:#BABED8\\"> b: ParameterOptionsTypeB </span><span style=\\"color:#89DDFF\\">=</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">{</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F07178\\">value</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#F78C6C\\">1</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">},</span><span style=\\"color:#BABED8\\"> c: ParameterOptionsTypeC): number</span></span></code></pre>
</div>",
  "name": "optionsTypeParamMethodWithDefaults",
  "parameters": [
    {
      "default": "{ value: 1 }",
      "description": "<p>Parameter with signature default.</p>
",
      "name": "a",
      "type": "ParameterOptionsTypeA",
    },
    {
      "default": "{ value: 1 }",
      "description": "<p>Parameter with jsdocs default.</p>
",
      "name": "b",
      "type": "ParameterOptionsTypeB",
    },
    {
      "default": undefined,
      "description": "<p>Parameter with inner jsdocs default.</p>
",
      "name": "c",
      "type": "ParameterOptionsTypeC",
    },
  ],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L235",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > requiredNumberParamMethod 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with a required parameter.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">requiredNumberParamMethod</span><span style=\\"color:#BABED8\\">(a: number): number</span></span></code></pre>
</div>",
  "name": "requiredNumberParamMethod",
  "parameters": [
    {
      "default": undefined,
      "description": "<p>The number parameter.</p>
",
      "name": "a",
      "type": "number",
    },
  ],
  "returns": "number",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L87",
  "throws": undefined,
}
`;

exports[`signature > analyzeSignature() > stringUnionParamMethod 1`] = `
{
  "deprecated": undefined,
  "description": "<p>Test with string union.</p>
",
  "examples": "<div class=\\"language-ts\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre v-pre class=\\"shiki material-theme-palenight\\"><code><span class=\\"line\\"><span style=\\"color:#82AAFF\\">stringUnionParamMethod</span><span style=\\"color:#BABED8\\">(value: </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">a</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">b</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#89DDFF\\">,</span><span style=\\"color:#BABED8\\"> options</span><span style=\\"color:#89DDFF\\">?:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">{</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">casing</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">lower</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">mixed</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">upper</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#89DDFF\\">,</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">excludes</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> readonly AlphaNumericChar[]</span><span style=\\"color:#89DDFF\\">,</span></span>
<span class=\\"line\\"><span style=\\"color:#BABED8\\">  </span><span style=\\"color:#F07178\\">format</span><span style=\\"color:#89DDFF\\">:</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">binary</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">css</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">decimal</span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">|</span><span style=\\"color:#BABED8\\"> </span><span style=\\"color:#89DDFF\\">'</span><span style=\\"color:#C3E88D\\">hex</span><span style=\\"color:#89DDFF\\">'</span></span>
<span class=\\"line\\"><span style=\\"color:#89DDFF\\">}</span><span style=\\"color:#BABED8\\">): string</span></span></code></pre>
</div>",
  "name": "stringUnionParamMethod",
  "parameters": [
    {
      "default": undefined,
      "description": "<p><code>'a'</code> or <code>'b'</code>.</p>
",
      "name": "value",
      "type": "'a' | 'b'",
    },
    {
      "default": undefined,
      "description": "<p>The options parameter.</p>
",
      "name": "options?",
      "type": "{ ... }",
    },
    {
      "default": undefined,
      "description": "<p>The casing parameter.</p>
",
      "name": "options.casing?",
      "type": "'lower' | 'mixed' | 'upper'",
    },
    {
      "default": undefined,
      "description": "<p>The excludes parameter.</p>
",
      "name": "options.excludes?",
      "type": "readonly AlphaNumericChar[]",
    },
    {
      "default": undefined,
      "description": "<p>The format parameter.</p>
",
      "name": "options.format?",
      "type": "'binary' | 'css' | 'decimal' | 'hex'",
    },
  ],
  "returns": "string",
  "seeAlsos": [],
  "since": "",
  "sourcePath": "test/scripts/apidoc/signature.example.ts#L138",
  "throws": undefined,
}
`;
